import hierarchyAliases from "@mindful-web/marko-web/utils/hierarchy-aliases";
import { getAsObject, get, getAsArray } from "@mindful-web/object-path";
import queryFragment from "../../graphql/fragments/content-list";

$ const { GAM, site } = out.global;
$ const { id, type, pageNode } = data;

$ const displayPublishedDate = ["event", "webinar", "contact"].includes(type) ? false : true;

<marko-web-content-page-layout id=id type=type>
  <@head>
    <marko-web-gtm-content-context|{ context }| id=id>
      <marko-web-gtm-push data=context />
    </marko-web-gtm-content-context>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      $ const adSlots = {
        "gpt-ad-leaderboard": GAM.getAdUnit({ name: "lb1", aliases }),
        "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases, size: [300, 250]}),
        "gpt-ad-rail1": GAM.getAdUnit({ name: "rail1", aliases, size: [300, 600] }),
      };
      <marko-web-gam-slots slots=adSlots />
      <global-gam-content-targeting-element obj=content />
    </marko-web-resolve-page>
  </@head>
  <@above-container>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      $ const aliases = hierarchyAliases(content.primarySection);
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "wa", aliases }) />
      <marko-web-gam-out-of-page-ad ...GAM.getAdUnit({ name: "reskin", aliases }) />
    </marko-web-resolve-page>
  </@above-container>
  <@page>
    <marko-web-resolve-page|{ data: content, resolved }| node=pageNode>
        $ const section = resolved.getAsObject("primarySection");
        $ const aliases = hierarchyAliases(content.primarySection);
        <marko-web-page-wrapper>
          <@section>
            <marko-web-gam-display-ad id="gpt-ad-leaderboard" />
          </@section>
          <@section>
            <div class="row">
              <div class="col">
                <div class="page-wrapper__header">
                  $ const images = getAsArray(content, 'images.edges').map(({ node }) => node);
                  <global-image-slider-element images=images />
                  <global-breadcrumbs-website-section section=content.primarySection />
                  <marko-web-content-name tag="h1" class="page-wrapper__title" obj=content />
                  <marko-web-content-teaser tag="p" class="page-wrapper__deck" obj=content />
                  <marko-web-social-sharing
                    path=content.siteContext.path
                    providers=["email", "linkedin", "facebook", "twitter", "instagram", "pinterest"]
                    title=content.name
                    description=content.teaser
                    media=get(content, "primaryImage.src")
                  />
                </div>
              </div>
            </div>

            <div class="row">
              <div class="col-lg-8">
                <default-theme-content-contact-details obj=content />
                <marko-web-content-body obj=content />
                <div class="page-wrapper__body">
                  $ const spaces = getAsArray(content, 'spaces.edges').map(({ node }) => node);
                  <global-venue-capacity spaces=spaces />
                </div>
              <global-related-content-block
                id=content.id
                type=type
                query-fragment=queryFragment
                section-id=section.id
                section-name=section.name
              />
              </div>

              <aside class="col-lg-4 page-rail">
                <global-inquiry-form content=content />
              </aside>
            </div>
          </@section>
        </marko-web-page-wrapper>
      </marko-web-resolve-page>
    </@page>
  <@foot>
    <marko-web-resolve-page|{ data: content }| node=pageNode>
      <global-fixed-ad-bottom aliases=hierarchyAliases(content.primarySection) />
    </marko-web-resolve-page>
  </@foot>
</marko-web-content-page-layout>
